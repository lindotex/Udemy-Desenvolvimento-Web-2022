## Padrão de Arquitetura (Architectural Pattern):

- Cliente-servidor,
- P2P,
- Quadro Negro,
- Criação implicita,
- Pipes e filtro,
- Plugin,
- Análise de sistema estruturada,
- Arquitetura Orientada a Serviços,
- Arquitetura Orientada a Busca,
- MVC (Model, View, Controller),
- Computação distribuida,
- Aplicação Monilítica,
- Modelo em três camadas.

## Padrão de Projeto (Design Pattern):


by GoF (Gang of Four) =>

    - Padrões de Criação:
        + Abstract Factory
        + Builder
        + Factory Method
        + Prototype
        + Singleton

    - Padrões Estruturais:
        + Adapter
        + Facade
        + Bridge
        + Decorator
        + Fly Weight
        + Composite
        + Proxy

    - Padrões Comportamentais
        + Chain of Responsability
        + Command
        + Interpreter
        + Iterator
        + Mediator
        + Memento
        + Observer

by GRASP - General Responsability Assignment Software Pattern (or Principios) =>

    - Controller
    - Creator
    - Indirection
    - Information Expert
    - High Cohesion
    - Loose coupling
    - Polymorphism
    - Protected Variations
    - Pure Fabrication


## Requisitos Funcionais e Não Funcionais

### Funcionais
    Recursos da aplicação em sí, ou seja, ligados diretamente as funcionalidades da aplicação.
    Ex:
        Autenticação de usuarios, Formulário de cadastro, Carrinho de compras, etc...

    ** Design Pattern **
        São levantados os possiveis padrões para solução da aplicação.


### Não Funcionais
    Não estão relacionados diretamente com a funcionalidade da aplicação, mas fazem parte da mesma.
    Ex:
        Tempo de processamento, Compatibilidade, Segurança, Re-usabilidade, Preço, etc...

    ** Architectural Pattern **
        São levantados quais os melhores padrões de arquitetura para o funcionamento da aplicação.
